// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model AuthUser {
  id           String    @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  username String @unique
  messages Message[]
  rooms UsersInRooms[]

  @@map("auth_user")
}

model AuthSession {
  id             String	@id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Message {
  id String @id @unique
  content String
  user AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id String
  room Room @relation(references: [id], fields: [room_id], onDelete: Cascade)
  room_id String

  @@index([room_id])
  @@index([user_id])
}

model Room {
  id String @id @default(uuid())
  messages Message[]
  users UsersInRooms[]
}

model UsersInRooms {
  user AuthUser @relation(fields: [user_id], references: [id])
  user_id String
  room Room @relation(fields: [room_id], references: [id])
  room_id String

  @@id([user_id, room_id])
  @@index([room_id])
  @@index([user_id])
}
